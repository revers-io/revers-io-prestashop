services:
  reversio.module:
    class: 'ReversIO'
    factory: ['Module', 'getInstanceByName']
    arguments:
      - 'reversio'

  installer:
    class: 'ReversIO\Install\Installer'
    arguments:
      - '@reversio.module'
      - '@databaseInstall'
      - '@ordersAdmin'
      - '@versions'
      - '%module_settings%'

  uninstaller:
    class: 'ReversIO\Uninstall\Uninstaller'
    arguments:
      - '@reversio.module'
      - '@databaseInstall'
      - '@versions'

  databaseInstall:
    class: 'ReversIO\Install\DatabaseInstall'
    arguments:
      - '@colourGetter'
      - '@nameGetter'

  arrayAdapter:
    class: 'ReversIO\Adapter\ArrayAdapter'

  productImporter:
    class: 'ReversIO\Services\Product\ProductService'
    arguments:
      - '@categoryMapService'

  ordersImport:
    class: 'ReversIO\Services\Orders\OrdersRequestBuilder'
    arguments:
      - '@orderRepository'
      - '@reversio.module'
      - '@modelService'
      - '@loggerService'

  orderRepository:
    class: 'ReversIO\Repository\OrderRepository'
    arguments:
      - '@colourGetter'

  logsRepository:
    class: 'ReversIO\Repository\Logs\LogsRepository'

  categoryMapRepository:
    class: 'ReversIO\Repository\CategoryMapRepository'

  categoryRepository:
    class: 'ReversIO\Repository\CategoryRepository'

  brandRepository:
    class: 'ReversIO\Repository\BrandRepository'

  loggerService:
    class: 'ReversIO\Repository\Logs\Logger'
    arguments:
      - '@orderRepository'
      - '@productRepository'
      - '@brandRepository'

  reversIoApiConnect:
    class: 'ReversIO\Services\APIConnect\ReversIOApi'
    arguments:
      - '@productImporter'
      - '@orderRepository'
      - '@logsRepository'
      - '@ordersRetrieveService'
      - '@loggerService'
      - '@token'
      - '@proxyApiClient'
      - '@productExportRepository'
      - '@categoryMapRepository'
      - '@categoryRepository'
      - '@brandService'
      - '@exportedProductsRepository'
      - '@versions'
      - '@productRepository'
      - '@apiHeadersBuilder'
      - '@reversIoCache'

  orderImportService:
    class: 'ReversIO\Services\Orders\OrderImportService'
    arguments:
      - '@ordersImport'
      - '@reversIoApiConnect'
      - '@orderRepository'

  ordersRetrieveService:
    class: 'ReversIO\Services\Orders\OrdersRetrieveService'
    arguments:
      - '@reversio.module'

  productForExportService:
    class: 'ReversIO\Services\Product\ProductsForExportService'
    arguments:
      - '@productsForExportRepository'
      - '@exportedProductsRepository'
      - '@versions'

  categoryMapService:
    class: 'ReversIO\Services\CategoryMapService'
    arguments:
      - '@categoryMapRepository'

  brandService:
    class: 'ReversIO\Services\Brand\BrandService'
    arguments:
      - '@reversio.module'
      - '@arrayAdapter'

  modelService:
    class: 'ReversIO\Services\Product\ModelService'
    arguments:
      - '@reversio.module'
      - '@orderRepository'
      - '@productExportRepository'
      - '@reversIoApiConnect'
      - '@reversIoCache'
      - '@exportedProductsRepository'

  ordersAdmin:
    class: 'ReversIO\Services\Orders\OrderListBuilder'
    arguments:
      - '@orderRepository'

  colourGetter:
    class: 'ReversIO\Services\Getters\ColourGetter'

  nameGetter:
    class: 'ReversIO\Services\Getters\ReversIoSettingNameGetter'

  autentification:
    class: 'ReversIO\Services\Autentification\APIAuthentication'
    arguments:
      - '@token'

  logService:
    class: 'ReversIO\Services\Log\LogService'
    arguments:
      - '@loggerService'

  productRepository:
    class: 'ReversIO\Repository\ProductRepository'

  productsForExportRepository:
    class: 'ReversIO\Repository\ProductsForExportRepository'

  exportedProductsRepository:
    class: 'ReversIO\Repository\ExportedProductsRepository'

  clientFactory:
    class: 'ReversIO\Factory\ClientFactory'
    arguments:
      - '@versions'

  apiClient:
    class: 'ReversIO\Services\APIConnect\ApiClient'
    arguments:
      - '@clientFactory'

  token:
    class: 'ReversIO\Services\APIConnect\Token'
    arguments:
      - '@reversio_decoder'

  proxyApiClient:
    class: 'ReversIO\Proxy\ProxyApiClient'
    arguments:
      - '@token'
      - '@apiClient'
      - '@reversio_decoder'

  ordersListingRepository:
    class: 'ReversIO\Repository\OrdersListingRepository'

  productExportRepository:
    class: 'ReversIO\Repository\ProductsForExportRepository'

  tabRepository:
    class: 'ReversIO\Repository\TabRepository'

  versions:
    class: 'ReversIO\Services\Versions\Versions'

  orderStatuses:
    class: 'ReversIO\Services\Orders\OrderStatus'

  reversio_decoder:
    class: 'ReversIO\Services\Decoder\Decoder'

  reversioMultiSelect:
    class: 'ReversIO\MultiSelect\MultiSelect'

  apiHeadersBuilder:
    class: 'ReversIO\Services\APIConnect\ApiHeadersBuilder'
    arguments:
      - '@token'

  reversIoCache:
    class: 'ReversIO\Services\Cache\Cache'
    arguments:
      - '@reversio.module'
